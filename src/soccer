
import java.nio.charset.StandardCharsets;
import java.util.stream.Stream;

public class soccer {
    public static void main(String[] args) {

        // This is a case sensitive trie
        Trie trie = new Trie(true, StandardCharsets.UTF_8);

        // Add words.
        trie.add("Joe");
        trie.add("John");
        trie.add("Johny");
        trie.add("Johnny");
        trie.add("Jane");
        trie.add("Jack");

        System.out.println("Number Of Words: " + trie.getNumberOfWords());

        trie.show();

        // Return true if the word is in the trie.
        System.out.println(trie.search("Jane"));
        // Return true if there is any word in the trie that starts with the given prefix.
        System.out.println(trie.startsWith("Ja"));
        // Remove a word
        trie.remove("Johnny");

        // Count words starts with a partial name to search the application for
        System.out.println("Number Of Words Starts with 'John': " + trie.countWordStartsWith("John"));
        System.out.println("Number Of Words Starts with 'Ja': " + trie.countWordStartsWith("Ja"));
        // Get words starts with a partial name to search the application for
        Stream<String> words = trie.getWordStartsWith("Jo");
        words.forEach(System.out::println);

        // String Similarity using Levenshtein distance
        // Get words that are less than the given maximum distance from the target word
        for (Map.Entry<String, Integer> entry : trie.getSimilarityMap("Jane", 1).entrySet()) {
            System.out.println(entry.getKey() + " - " + entry.getValue());
        }
        // Get word that is less than the given maximum distance from the target word
        System.out.println(trie.similarity("Jane", 1));
    }
}